{"version":3,"sources":["CoffeeList.js","Toast.js","Admin.js","App.js","serviceWorker.js","index.js"],"names":["CoffeeList","props","readData","state","arts","bind","self","this","axios","get","window","global","api_location","then","response","console","log","data","setState","catch","error","table","i","length","push","key","description","creator","format","style","marginBottom","Table","getArts","React","Component","Toaster","show","hide","prevProps","Toast","onClose","delay","autohide","Header","className","Body","message","Admin","validated","id","buttonDisabled","toastShow","toastText","changeHandler","handleSubmit","event","preventDefault","currentTarget","checkValidity","FormData","append","file","post","files_location","_boundary","res","status","statusText","stopPropagation","target","name","value","files","Container","Form","noValidate","onSubmit","Group","as","Row","controlId","Label","column","sm","Col","Control","type","placeholder","required","width","onChange","Text","Feedback","Button","disabled","App","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","inline","FormControl","variant","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6dfdab83.chunk.js","sourcesContent":["import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport axios from 'axios';\r\n\r\nclass CoffeeList extends React.Component {\r\n\r\n    readData() {\r\n        const self = this;\r\n        axios.get(window.global.api_location+'/arts').then(function(response) {\r\n            console.log(response.data);\r\n\r\n            self.setState({arts: response.data});\r\n        }).catch(function (error){\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    getArts() {\r\n        let table = []\r\n\r\n        for (let i=0; i < this.state.arts.length; i++) {\r\n\r\n            table.push(\r\n            <tr key={i}>\r\n                <td>{this.state.arts[i].description}</td>\r\n                <td>{this.state.arts[i].creator}</td>\r\n                <td>{this.state.arts[i].format}</td>\r\n            </tr>\r\n            );\r\n        }\r\n\r\n        return table\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.readData();\r\n        this.state = {arts: []};\r\n    \r\n        this.readData = this.readData.bind(this);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1 style={{marginBottom: \"40px\"}}>Collection</h1>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Description\r\n                        </th>\r\n                        <th>\r\n                            Author\r\n                        </th>\r\n                        <th>\r\n                            Format\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.getArts()}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n      ) \r\n    }\r\n}\r\n\r\nexport default CoffeeList;","import React from 'react';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nclass Toaster extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {show: false};\r\n        this.hide = this.hide.bind(this);\r\n    }\r\n\r\n    hide(){\r\n        this.setState({show: false});\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({show: this.props.show});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n              <Toast onClose={this.hide} show={this.state.show} delay={3000} autohide>\r\n                <Toast.Header>\r\n                  <strong className=\"mr-auto\">File Upload</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>{this.props.message}</Toast.Body>\r\n              </Toast>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Toaster;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Toast from './Toast.js'\r\n\r\nimport axios from 'axios';\r\n\r\n/*\r\nThis is the react equivilent of the following HTML form\r\n<form action=\"http://localhost:8000\" method=\"post\" enctype=\"multipart/form-data\">\r\n  <p><input type=\"text\" name=\"id\" value=\"\">\r\n  <p><input type=\"file\" name=\"file\">\r\n  <p><button type=\"submit\">Submit</button>\r\n</form>\r\n*/\r\n\r\n\r\nclass Admin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {validated: false, id: \"\", buttonDisabled: false, toastShow: false, toastText: \"asd\"};\r\n    \r\n        this.validated = this.validated.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    validated(){\r\n        console.log(\"validated\", this.state.validated)\r\n        return this.state.validated;\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(event.currentTarget.checkValidity() === false) {\r\n            event.stopPropagation();\r\n            return;\r\n        };\r\n\r\n        this.setState({buttonDisabled: true, toastShow: false})\r\n\r\n        // create the data\r\n        const data = new FormData()\r\n        data.append('file', this.state.file);\r\n        data.append('id', this.state.id);\r\n\r\n        // upload the file\r\n        axios.post(\r\n            window.global.files_location, \r\n            data, \r\n            {'content-type': `multipart/form-data; boundary=${data._boundary}`})\r\n        .then(res => {\r\n            console.log(res);\r\n            var toastText = \"\";\r\n            if(res.status === 200) {\r\n                toastText = \"Uploaded file\";\r\n            } else {\r\n                toastText = \"Unable to upload file. Error:\" +res.statusText;\r\n            }\r\n\r\n            this.setState({buttonDisabled: false, toastShow: true, toastText: toastText});\r\n        }).catch(error => {\r\n            console.log(\"Err\" + error);\r\n            this.setState({buttonDisabled: false, toastShow: true, toastText: \"Unable to upload file. \" + error});\r\n        });\r\n    }\r\n\r\n    changeHandler(event) {\r\n        if(event.target.name === \"file\"){\r\n            this.setState({ [event.target.name]: event.target.files[0], toastShow: false});\r\n            return\r\n        }\r\n\r\n        this.setState({ [event.target.name]: event.target.value, toastShow: false});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <div>\r\n          <h1 style={{marginBottom: \"40px\"}}>Admin</h1>\r\n          <Container className=\"text-left\">\r\n            <Form noValidate validated={this.validated} onSubmit={this.handleSubmit}>\r\n                  <Form.Group as={Row} controlId=\"productID\">\r\n                      <Form.Label column sm=\"2\">Art piece ID:</Form.Label>\r\n                      <Col sm=\"6\">\r\n                          <Form.Control type=\"text\" name=\"id\" placeholder=\"\" required style={{width: \"80px\"}} value={this.state.id} onChange={this.changeHandler}/>\r\n                          <Form.Text className=\"text-muted\">Enter the product id to upload an image for</Form.Text>\r\n                          <Form.Control.Feedback type=\"invalid\">Please provide a product ID.</Form.Control.Feedback>\r\n                      </Col>\r\n                  <Col sm=\"4\">\r\n                      <Toast show={this.state.toastShow} message={this.state.toastText}/>\r\n                  </Col>\r\n                  </Form.Group>\r\n                  <Form.Group as={Row}>\r\n                      <Form.Label column sm=\"2\">File:</Form.Label>\r\n                      <Col sm=\"10\">\r\n                          <Form.Control type=\"file\" name=\"file\" placeholder=\"\" required onChange={this.changeHandler}/>\r\n                          <Form.Text className=\"text-muted\">Image to associate with the product</Form.Text>\r\n                          <Form.Control.Feedback type=\"invalid\">Please select a file to upload.</Form.Control.Feedback>\r\n                      </Col>\r\n                  </Form.Group>\r\n                  <Button  type=\"submit\" disabled={this.state.buttonDisabled}>Submit form</Button>\r\n            </Form>\r\n          </Container>\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport './App.css';\r\n\r\nimport CoffeeList from './CoffeeList.js'\r\nimport Admin from './Admin.js'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n    <div className=\"App\">\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">Salon Monterey</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/admin\">Admin</Nav.Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n        <Switch>\r\n          <Route path=\"/admin\">\r\n            <Admin/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <CoffeeList/>\r\n          </Route>\r\n          <Route>\r\n            <CoffeeList/>\r\n          </Route>\r\n        </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}